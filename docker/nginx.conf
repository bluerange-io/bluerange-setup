worker_processes  1;
error_log	stderr debug;
#error_log  /var/log/nginx/error.log;
#error_log  syslog:server=localhost warn;
# pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    # increase request size for app upload
    client_max_body_size 1024M;
    large_client_header_buffers 8 32k;
    log_format main '$remote_addr - $remote_user [$time_local] '
                '"$request" $status $body_bytes_sent '
                '"$http_referer" "$http_user_agent‚Äù "$http_x_forwarded_for" '
                '$request_time $upstream_response_time $pipe';
    #access_log  /var/log/nginx/access.log  main;
    #access_log  syslog:server=localhost  main;
    sendfile        on;
    keepalive_timeout  65;
    index   index.html index.htm;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    proxy_http_version 1.1;
    proxy_read_timeout 300;
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    proxy_cache_path cache levels=1:2 keys_zone=cache:16m max_size=16g inactive=60m use_temp_path=off;

    server {
        listen 80 default_server;
        # Redirect to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;

        ssl_certificate      /etc/nginx/server.pem;
        ssl_certificate_key  /etc/nginx/server.key;
        ssl_prefer_server_ciphers   on;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        # ssl_dhparam /etc/nginx/dhparams.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        gzip on;
        gzip_proxied any;
        gzip_min_length  1100;
        gzip_buffers 4 32k;
        gzip_types text/plain application/javascript text/xml text/css;
        gzip_vary on;

        # add SameSite attribute
        proxy_cookie_path / "/; HttpOnly; SameSite=strict";

        location /nodered/ {
                auth_basic "Node Red";
                auth_basic_user_file /etc/nginx/htpasswd;

                rewrite ^/nodered/(.*)$ /$1 break;
                proxy_pass http://nodered:1880;
        }

        location ~ /relution/api/v1/files/.*/content {
            proxy_cache cache;
            proxy_cache_key $host$uri;            # must NOT include query params!
            proxy_cache_revalidate on;
            proxy_cache_lock on;
            proxy_cache_lock_age 60s;
            proxy_cache_lock_timeout 60s;

            proxy_pass http://bluerange:8080;
        }

        location / {
            proxy_pass http://bluerange:8080;
        }

        error_page 502 /502.html;
        error_page 503 /502.html;
        error_page 504 /502.html;
        location /502.html {
            root /opt/relution/proxy;
        }
    }
}
