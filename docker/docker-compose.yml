version: '3.9'
services:

  bluerange:
    restart: unless-stopped
    env_file:
      - './server.env'
    environment:
      - 'BLUERANGE_COMPOSE_SH=${BLUERANGE_COMPOSE_SH:?>>> Use ./bluerange-compose.sh instead of docker-compose! <<<}'
      - 'ROOT_DATABASE_PWD='
      - 'MINIO_ACCESS_KEY='
      - 'MINIO_SECRET_KEY='
      - 'HOSTNAME=https://$${HOST}'
      - 'TZ=UTC'
      - 'DATABASE_TYPE=${DATABASE_TYPE:-mariadb}'
      - 'DATABASE_URL=${DATABASE_URL:-jdbc:mariadb://database/bluerange?useServerPrepStmts=true}'
      - 'DATABASE_USER=${DATABASE_USER:-bluerange}'
      - 'DATABASE_PWD=${BLUERANGE_DATABASE_PASSWORD:-bluerange-database-pwd-change-me}'
      - 'RELUTION_MONGODB_ENABLED=true'
      - 'MONGO_DATABASE=bluerange'
      - 'MONGO_HOST=mongodb'
      - 'MONGO_PORT=27017'
      - 'MONGO_USERNAME=bluerange'
      - 'MONGO_PASSWORD=${MONGO_PASSWORD:-bluerange-mongodb-pwd-change-me}'
      - 'MONGO_AUTHENTICATION_DATABASE=admin'
      - 'MQTT_ENABLED=true'
      - 'MQTT_SERVER_URIS=ssl://$${HOST}:${PORT_MOSQUITTO_MQTTS:-8883},wss://$${HOST}:${PORT_MOSQUITTO_WSS_PUBLIC:-443}'
      - 'ORGA_NAME=iot'
      - 'ORGA_FULLNAME=IOT'
      - 'ORGA_ADMIN_USERNAME=admin'
      - 'ORGA_ADMIN_GIVENNAME=IOT'
      - 'ORGA_ADMIN_SURNAME=Administrator'
      - 'ORGA_ADMIN_PASSWORD=${ORGA_ADMIN_PASSWORD:?>>> You need set a secure ORGA_ADMIN_PASSWORD in the server.env <<<}'
      - 'SYSTEM_ADMIN_PASSWORD=${SYSTEM_ADMIN_PASSWORD:?>>> You need set a secure SYSTEM_ADMIN_PASSWORD in the server.env <<<}'
    depends_on:
      database:
        condition: service_healthy
    ports:
      - '${PORT_BLUERANGE_8080:-127.0.0.1:8080}:8080'
      - '${PORT_BLUERANGE_8099:-127.0.0.1:8099}:8099'
    expose:
      - '7800'
      - '8080'
      - '8099'
    image: bluerange/bluerange:${DOCKER_BLUERANGE:-latest}
    volumes:
      # mount folder of trusted CAs
      - './certs/anchors:/etc/pki/ca-trust/source/anchors:ro'
      - './application.yml:/opt/relution/application.yml:ro'
      - './templates:/opt/relution/templates:ro'
    links:
      - 'database'
      - 'mongodb'
    logging:
      driver: 'json-file'
      options:
        max-size: '${DOCKER_BLUERANGE_LOGSIZE:-64m}'
        max-file: '4'
        compress: 'true'

  database:
    entrypoint: ["/bin/bash"]
    command: /scripts/setMariaDBPermsAndStartEntryPoint.sh
    restart: unless-stopped
    environment:
      - 'MYSQL_PASSWORD=${BLUERANGE_DATABASE_PASSWORD:-bluerange-database-pwd-change-me}'
      - 'MYSQL_USER=bluerange'
      - 'MYSQL_DATABASE=bluerange'
      - 'MYSQL_ROOT_PASSWORD=${ROOT_DATABASE_PWD:-root-database-pwd-change-me}'
      - 'GRAFANA_DATABASE_PASSWORD=${GRAFANA_DATABASE_PASSWORD}'
      - 'MARIADB_AUTO_UPGRADE=1'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - '${PORT_MARIADB:-127.0.0.1:3306}:3306'
    expose:
      - '3306'
    image: mariadb:${DOCKER_MARIADB:-latest}
    volumes:
      - './configs/scripts/setMariaDBPermsAndStartEntryPoint.sh:/scripts/setMariaDBPermsAndStartEntryPoint.sh:ro'
      - './configs/database/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql.template:ro'
      - './configs/database/database.cnf:/etc/mysql/conf.d/database.cnf:ro'
      - 'mysql:/var/lib/mysql:rw'
      - './backup:/backup:rw'
    logging:
      driver: 'json-file'
      options:
        max-size: '${DOCKER_MARIADB_LOGSIZE:-32m}'
        max-file: '4'
        compress: 'true'

  mongodb:
    restart: unless-stopped
    environment:
      - 'MONGO_INITDB_ROOT_USERNAME=bluerange'
      - 'MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-bluerange-mongodb-pwd-change-me}'
      - 'MONGO_INITDB_DATABASE=bluerange'
    ports:
      - '${PORT_MONGO:-127.0.0.1:27017}:27017'
    expose:
      - '27017'
    image: mongo:${DOCKER_MONGO:-latest}
    volumes:
      - 'mongodb:/data/db:rw'
      - './backup:/backup:rw'
    logging:
      driver: 'json-file'
      options:
        max-size: '${DOCKER_MONGO_LOGSIZE:-32m}'
        max-file: '4'
        compress: 'true'

  nginx:
    restart: unless-stopped
    ports:
      - '${PORT_BLUERANGE:-443}:443'
    expose:
      - '80'
      - '443'
    image: nginx:${DOCKER_NGINX:-latest}
    #command: /bin/bash -c "nginx-debug -g 'daemon off;'"
    volumes:
      - './configs/nginx.conf:/etc/nginx/nginx.conf:ro'
      - './configs/mime.types:/etc/nginx/mime.types:ro'
      - './certs/server.key:/etc/nginx/server.key:ro'
      - './certs/fullchain.pem:/etc/nginx/server.pem:ro'
      - './htpasswd:/etc/nginx/htpasswd:ro'
    links: 
      - 'bluerange'
      - 'mosquitto'
    logging:
      driver: 'json-file'
      options:
        max-size: '${DOCKER_NGINX_LOGSIZE:-16m}'
        max-file: '4'
        compress: 'true'

  mosquitto:
    restart: unless-stopped
    environment:
      - BLUERANGE_HOSTNAME=bluerange
      - PROMETHEUS_PASSWORD=${PROMETHEUS_PASSWORD:-prometheus-change-me}
    ports:
      - '${PORT_MOSQUITTO_MQTT:-127.0.0.1:1883}:1883'
      - '${PORT_MOSQUITTO_MQTTS:-8883}:8883'
      - '${PORT_MOSQUITTO_WSS:-9001}:9001'
    expose:
      - '1883'
      - '8883'
      - '9001'
    image: bluerange/bluerange-mosquitto:${DOCKER_MOSQUITTO:-latest}
    volumes:
      #- './mosquitto.conf:/etc/mosquitto/mosquitto.conf:ro'
      - './certs/server.key:/etc/mosquitto/server.key:ro'
      - './certs/fullchain.pem:/etc/mosquitto/server.pem:ro'
    links:
      - bluerange
    ulimits:
      nofile: 100000
      nproc: 100000
    logging:
      driver: 'json-file'
      options:
        max-size: '${DOCKER_MOSQUITTO_LOGSIZE:-16m}'
        max-file: '4'
        compress: 'true'

  automate:
    profiles:
      - automate
    restart: unless-stopped
    depends_on:
      bluerange:
        condition: service_healthy
    ports:
      - '${PORT_AUTOMATE:-127.0.0.1:9123}:9123'
    expose:
      - '9123'
    image: harbor.mway.io/bluerange/bluerange-automate:latest
    volumes:
      - './configs/automate.json:/opt/config/default.json'
    logging:
      driver: 'json-file'
      options:
        max-size: '${DOCKER_AUTOMATE_LOGSIZE:-16m}'
        max-file: '4'
        compress: 'true'

  nodered:
    profiles:
      - nodered
    restart: unless-stopped
    ports:
      - '${PORT_NODERED:-127.0.0.1:1880}:1880'
    expose:
      - '1880'
    image: nodered/node-red:${DOCKER_NODERED:-latest}
    volumes:
      - 'nodered:/data:rw'
    links:
      - 'bluerange'
      - 'mosquitto'
      - 'database'
      - 'mongodb'
    logging:
      driver: 'json-file'
      options:
        max-size: '${DOCKER_NODERED_LOGSIZE:-16m}'
        max-file: '4'
        compress: 'true'

volumes:
  mysql:
  mongodb:
  nodered:
