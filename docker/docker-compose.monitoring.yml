version: '3.9'
services:

  prometheus:
    profiles:
      - monitoring
    entrypoint: ["/bin/sh"]
    command: /scripts/setPrometheusPermsAndStartEntryPoint.sh
    restart: unless-stopped
    environment:
      - 'BLUERANGE_COMPOSE_SH=${BLUERANGE_COMPOSE_SH:?>>> Use ./bluerange-compose.sh instead of docker-compose! <<<}'
      - 'cluster.name=bluerange'
      - 'discovery.type=single-node'
      - PROMETHEUS_PASSWORD=${PROMETHEUS_PASSWORD:-prometheus-change-me}
      - PORT_MOSQUITTO_MQTT=3000
      - PORT_KIBANA=${PORT_KIBANA}
      - SYSTEM_ADMIN_PASSWORD=${SYSTEM_ADMIN_PASSWORD}
    ports:
      - '${PORT_PROMETHEUS:-9090}:9090'
    expose:
      - '9090'
    image: prom/prometheus:${DOCKER_PROMETHEUS:-v2.12.0}
    volumes:
      - './configs/scripts/setPrometheusPermsAndStartEntryPoint.sh:/scripts/setPrometheusPermsAndStartEntryPoint.sh:ro'
      - './configs/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro'
      - 'prometheus:/prometheus:rw'
    links:
     - 'bluerange'
     - 'kibana'
     - 'mosquitto'
    logging:
      driver: 'json-file'
      options:
        max-size: '${DOCKER_PROMETHEUS_LOGSIZE:-8m}'
        max-file: '4'
        compress: 'true'


  grafana:
    profiles:
      - monitoring
    entrypoint: ["/bin/bash"]
    user: root
    command: /scripts/setGrafanaPermsAndStartEntryPoint.sh
    restart: unless-stopped
    environment:
      - 'SYSTEM_ADMIN_PASSWORD=${SYSTEM_ADMIN_PASSWORD}'
      - 'GRAFANA_DATABASE_PASSWORD=${GRAFANA_DATABASE_PASSWORD}'
    ports:
      - '${PORT_GRAFANA:-3000}:3000'
    expose:
      - '3000'
    image: grafana/grafana:${DOCKER_GRAFANA:-8.1.1}
    volumes:
      - './configs/scripts/setGrafanaPermsAndStartEntryPoint.sh:/scripts/setGrafanaPermsAndStartEntryPoint.sh:ro'
      - './configs/monitoring/grafana/grafana.ini:/home/grafana/grafana.ini.template:ro'
      - './configs/monitoring/grafana/provisioning:/etc/grafana/provisioning:ro'
      - './certs/fullchain.pem:/home/grafana/server.pem.copy:ro'
      - './certs/server.key:/home/grafana/server.key.copy:ro'
      - 'grafana:/var/lib/grafana:rw'
    links:
      - 'prometheus'
      - 'graphite'
      - 'database'
    logging:
      driver: 'json-file'
      options:
        max-size: '${DOCKER_GRAFANA_LOGSIZE:-8m}'
        max-file: '4'
        compress: 'true'

  graphite:
    profiles:
      - monitoring
    restart: unless-stopped
    ports:
      - '${PORT_GRAPHITE:-2004}:2004'
      - '${PORT_GRAPHITE_9780:-9780}:80'
    image: graphiteapp/graphite-statsd:${DOCKER_GRAPHITE:-1.1.8-1}
    volumes:
      - ./configs/monitoring/graphite/storage-schemas.conf:/opt/graphite/conf/storage-schemas.conf:ro
      - ./configs/monitoring/graphite/storage-aggregation.conf:/opt/graphite/conf/storage-aggregation.conf:ro
    logging:
      driver: 'json-file'
      options:
        max-size: '${DOCKER_GRAPHITE_LOGSIZE:-8m}'
        max-file: '4'
        compress: 'true'

volumes:
  prometheus:
  grafana:
